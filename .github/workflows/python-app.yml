# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Package App

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
    - uses: actions/setup-python@v5
      id: setup_python
      with:
        python-version: '3.11'

    - name: Restore cached virtualenv
      uses: actions/cache/restore@v4
      with:
        key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
        path: .venv

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install flake8 pytest
        python -m pip install -r requirements.txt
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

    - name: Saved cached virtualenv
      uses: actions/cache/save@v4
      with:
        key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}
        path: .venv
        
    - name: Make build.sh executable
      run: chmod +x build.sh

    - name: Run build script
      run: ./build.sh

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Upload build application
      uses: actions/upload-artifact@v4
      with:
        name: infrastructure-detector-build-macos
        path: dist/Infrastructure\ Objects\ Detector.dmg
        retention-days: 7
